# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master
- dev

parameters:
- name: isLatestImage
  displayName: 'Include Latest Tag'
  type: boolean
  default: false

stages:
- stage: Build
  jobs:
  - job: BuildDocker
    displayName: 'Build Docker Images'
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: DockerCompose@0
      displayName: 'Build Docker Compose Services'
      inputs:
        containerregistrytype: 'Container Registry'
        dockerRegistryEndpoint: 'hub.docker.com'
        dockerComposeFile: '**/docker-compose.yml'
        action: 'Build services'
        additionalImageTags: $(Build.BuildId)
    - task: DockerCompose@0
      displayName: 'Push Images'
      # we don't want to push any images during a PR
      condition: not(eq(variables['Build.Reason'], 'PullRequest'))
      inputs:
        containerregistrytype: 'Container Registry'
        dockerRegistryEndpoint: 'hub.docker.com'
        dockerComposeFile: '**/docker-compose.yml'
        action: 'Push services'
        additionalImageTags: $(Build.BuildId)
        includeLatestTag: ${{parameters.isLatestImage}}
        includeSourceTags: true

- stage: Test
  jobs:
  - job: RunTests
    displayName: 'Run Tests'
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: DotNetCoreCLI@2
      displayName: 'dotnet test'
      inputs:
        command: 'test'
        projects: '**/**Tests.csproj'

# - stage: Deploy
